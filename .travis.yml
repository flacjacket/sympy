language: python
sudo: false
env:
  matrix:
  - TEST_DOCTESTS="true" FASTCACHE="false"
  - SPLIT="1/4" TEST_SYMPY="true"
  - SPLIT="2/4" TEST_SYMPY="true"
  - SPLIT="3/4" TEST_SYMPY="true"
  - SPLIT="4/4" TEST_SYMPY="true"
  global:
    secure: "SyoeHaDi9vRPJ5X0JFY5/nQif66u+fehtqUg7F8ILoNrwugJcs+u4VZm1sJ7Cv2h6uGoNRAfkkrahxxj2mKCgpqbY2MdDAZ+ru5wn5R0NjYjTpEz7ET4Xq5o+gca+mhFMkiutYihM73+AaIKCX0vfC9yb8WBPXzbbrv8vVvQr6Y="

python:
  - 2.6
  - 2.7
  - 3.2
  - 3.3
  - 3.4
  - 3.5

matrix:
  include:
    - python: 2.7
      env:
        - TEST_GMPY="true"
        - TEST_MATPLOTLIB="true"
        - TEST_THEANO="true"
        - TEST_ASCII="true"
      addons:
        apt:
          packages:
            # for gmpy
            - libgmp-dev

            # for theano
            - libatlas-dev
            - libatlas-base-dev
            - liblapack-dev
            - gfortran
    - python: 3.5
      env:
        - TEST_GMPY="true"
        - TEST_MATPLOTLIB="true"
        - TEST_THEANO="true"
        - TEST_ASCII="true"
      addons:
        apt:
          packages:
            # for gmpy
            - libgmp-dev

            # for theano
            - libatlas-dev
            - libatlas-base-dev
            - liblapack-dev
            - gfortran
            - python-scipy
      sudo: true
      dist: trusty

    - python: "pypy"
      env:
        - TEST_DOCTESTS="true"
        - FASTCACHE="false"
    - python: "pypy"
      env:
        - TEST_SYMPY="true"
        - SPLIT="1/4"
        - FASTCACHE="false"
    - python: "pypy"
      env:
        - TEST_SYMPY="true"
        - SPLIT="2/4"
        - FASTCACHE="false"
    - python: "pypy"
      env:
        - TEST_SYMPY="true"
        - SPLIT="3/4"
        - FASTCACHE="false"

    - python: 3.5
      env:
        - TEST_SPHINX="true"
        - FASTCACHE="false"
      addons:
        apt:
          packages:
            - graphviz
            - inkscape
            - texlive
            - texlive-xetex
            - texlive-fonts-recommended
            - texlive-latex-extra
            - lmodern
            - librsvg2-bin
            - imagemagick
            - docbook2x

    - python: 2.7
      env:
        - TEST_SLOW="true"
        - SPLIT="1/3"
    - python: 2.7
      env:
        - TEST_SLOW="true"
        - SPLIT="2/3"
    - python: 2.7
      env:
        - TEST_SLOW="true"
        - SPLIT="3/3"
    - python: 3.5
      env:
        - TEST_SLOW="true"
        - SPLIT="1/3"
    - python: 3.5
      env:
        - TEST_SLOW="true"
        - SPLIT="2/3"
    - python: 3.5
      env:
        - TEST_SLOW="true"
        - SPLIT="3/3"

    - python: 2.7
      env:
        - TEST_AUTOWRAP="true"
      addons:
        apt:
          packages:
            - gfortran
            - gcc
            - python-numpy
            - cython
      virtualenv:
        system_site_packages: true

  allow_failures:
    - python: 3.5 # Dummy value
      env:
        - TEST_SAGE="true"
        - FASTCACHE="false"
      sudo: true
    - python: "pypy"
      env:
        - SPLIT="4/4"

before_install:
  - if [[ "${FASTCACHE}" != "false" ]]; then
      pip install fastcache;
    fi
  - if [[ "${TEST_AUTOWRAP}" == "true" ]]; then
      pip uninstall -y numpy;
    fi
  - if [[ "${TEST_GMPY}" == "true" ]]; then
      pip install "gmpy==1.16";
    fi
  - if [[ "${TEST_SPHINX}" == "true" ]]; then
      pip install "sphinx==1.3.1";
    fi
  - if [[ "${TEST_MATPLOTLIB}" == "true" ]]; then
      pip install "numpy";
      pip install --allow-external "matplotlib";
    fi
  - if [[ "${TEST_THEANO}" == "true" ]]; then
      pip install "numpy";
      pip install "theano";
    fi
  - if [[ "${TEST_SAGE}" == "true" ]]; then
      sudo apt-add-repository -y ppa:aims/sagemath;
      sudo apt-get update;
      sudo apt-get install sagemath-upstream-binary;
    fi
install:
#The install cycle below is to test installation on systems without setuptools.
  - if [[ "${TEST_AUTOWRAP}" == "true" ]]; then
      pip uninstall -y setuptools;
      python setup.py install;
      pip uninstall -y sympy;
      pip install setuptools;
      python setup.py install;
    elif [[ "${TEST_SAGE}" != "true" ]]; then
      python setup.py install;
    fi
script:
  - bin/test_travis.sh
#  - if [[ "${TEST_SPHINX}" == "true" ]]; then
#      bin/deploy_doc.sh;
#    fi
notifications:
  email: false
